/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
    mesh_0_1: THREE.Mesh;
    mesh_0_2: THREE.Mesh;
    mesh_0_3: THREE.Mesh;
    mesh_0_4: THREE.Mesh;
    mesh_0_5: THREE.Mesh;
    mesh_0_6: THREE.Mesh;
    mesh_1: THREE.Mesh;
    mesh_2: THREE.Mesh;
    mesh_3: THREE.Mesh;
    mesh_4: THREE.Mesh;
    mesh_5: THREE.Mesh;
    mesh_6: THREE.Mesh;
    mesh_7: THREE.Mesh;
    mesh_8: THREE.Mesh;
    mesh_9: THREE.Mesh;
    mesh_10: THREE.Mesh;
    mesh_11: THREE.Mesh;
  };
  materials: {};
};

export default function BuildingDiner({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    "/building_diner/building_diner.gltf"
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[0, 0, -0.01]} scale={0.04}>
        <mesh
          geometry={nodes.mesh_0.geometry}
          material={nodes.mesh_0.material}
        />
        <mesh
          geometry={nodes.mesh_0_1.geometry}
          material={nodes.mesh_0_1.material}
        />
        <mesh
          geometry={nodes.mesh_0_2.geometry}
          material={nodes.mesh_0_2.material}
        />
        <mesh
          geometry={nodes.mesh_0_3.geometry}
          material={nodes.mesh_0_3.material}
        />
        <mesh
          geometry={nodes.mesh_0_4.geometry}
          material={nodes.mesh_0_4.material}
        />
        <mesh
          geometry={nodes.mesh_0_5.geometry}
          material={nodes.mesh_0_5.material}
        />
        <mesh
          geometry={nodes.mesh_0_6.geometry}
          material={nodes.mesh_0_6.material}
        />
      </group>
      <mesh
        geometry={nodes.mesh_1.geometry}
        material={nodes.mesh_1.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_2.geometry}
        material={nodes.mesh_2.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_3.geometry}
        material={nodes.mesh_3.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_4.geometry}
        material={nodes.mesh_4.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_5.geometry}
        material={nodes.mesh_5.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_6.geometry}
        material={nodes.mesh_6.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_7.geometry}
        material={nodes.mesh_7.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_8.geometry}
        material={nodes.mesh_8.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_9.geometry}
        material={nodes.mesh_9.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_10.geometry}
        material={nodes.mesh_10.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
      <mesh
        geometry={nodes.mesh_11.geometry}
        material={nodes.mesh_11.material}
        position={[0, 0, -0.01]}
        scale={0.04}
      />
    </group>
  );
}

useGLTF.preload("/building_diner/building_diner.gltf");
