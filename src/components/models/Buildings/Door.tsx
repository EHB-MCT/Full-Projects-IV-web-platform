/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: I am Cassia (https://sketchfab.com/iamCassia)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/white-door-9dd342e2c2af46ee81a80483986b6754
title: White Door
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    door_Door001_0: THREE.Mesh;
    door_PortaComum001_0: THREE.Mesh;
    Frame_DoorFrame_0: THREE.Mesh;
  };
  materials: {
    ["Door.001"]: THREE.MeshStandardMaterial;
    ["PortaComum.001"]: THREE.MeshStandardMaterial;
    DoorFrame: THREE.MeshStandardMaterial;
  };
};

export default function Door({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF("/white_door/scene.gltf") as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group scale={100}>
            <mesh
              geometry={nodes.door_Door001_0.geometry}
              material={materials["Door.001"]}
            />
            <mesh
              geometry={nodes.door_PortaComum001_0.geometry}
              material={materials["PortaComum.001"]}
            />
          </group>
          <group scale={100}>
            <mesh
              geometry={nodes.Frame_DoorFrame_0.geometry}
              material={materials.DoorFrame}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/white_door/scene.gltf");
