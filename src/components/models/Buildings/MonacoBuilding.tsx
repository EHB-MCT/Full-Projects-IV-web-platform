/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
    mesh_1: THREE.Mesh;
  };
  materials: {};
};

export default function RandomBuilding({
  ...props
}: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    "/Monaco_building_2/scene.gltf"
  ) as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.mesh_0.geometry}
        material={nodes.mesh_0.material}
        position={[53.03, 0, -13.03]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={39.37}
      />
      <mesh
        geometry={nodes.mesh_1.geometry}
        material={nodes.mesh_1.material}
        position={[53.03, 0, -13.03]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={39.37}
      />
    </group>
  );
}

useGLTF.preload("/Monaco_building_2/scene.gltf");
