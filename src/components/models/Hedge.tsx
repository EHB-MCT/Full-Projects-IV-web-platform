/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: 1-3D.com (https://sketchfab.com/1-3D.com)
license: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)
source: https://sketchfab.com/3d-models/hedge-f2006b1a3af9442987963da054283ad7
title: Hedge
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
  };
  materials: {
    hedgetextured: THREE.MeshStandardMaterial;
  };
};

export default function Hedge({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF("/hedge/scene.gltf") as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh
          geometry={nodes.Object_2.geometry}
          material={materials.hedgetextured}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/hedge/scene.gltf");
